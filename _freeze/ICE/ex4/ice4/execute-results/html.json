{
  "hash": "d47f87b54ef62f7718dce14e131fa783",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ICE 4\"\ndate: \"September 9, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n#SpatioTemporalPointPatternAnalysis\n\nA spatio-temporal point process is a random collection of points, where each point represents the time and location of an event.\n\n\n\n## Install/Launch R\n\n\n::: {.cell}\n\n:::\n\nforest fire or something\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse, gifski, animation)\n```\n:::\n\n\n## Import the data\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb <- st_read(dsn = \"data/rawdata\", layer = \"Kepulauan_Bangka_Belitung\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `C:\\Users\\pwnyt\\Documents\\GitHub\\415\\ICE\\ex4\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_sf <- st_read(dsn = \"data/rawdata\", layer = \"Kepulauan_Bangka_Belitung\") %>%\n  st_union() %>%\n  st_zm(drop = TRUE, what = \"ZM\") %>%\n  st_transform(crs = 32748)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `C:\\Users\\pwnyt\\Documents\\GitHub\\415\\ICE\\ex4\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nst_as_s2(): dropping Z and/or M coordinate\n```\n\n\n:::\n:::\n\n\n\nconvert kbb to owin object\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_owin <- as.owin(kbb_sf)\nkbb_owin\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nwindow: polygonal boundary\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n```\n\n\n:::\n:::\n\ncheck owin\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(kbb_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"owin\"\n```\n\n\n:::\n:::\n\n\nForest Fire data\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- read.csv(\"data/rawdata/forestfires.csv\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32748)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- fire_sf %>%\n  mutate(DayOfYear = yday(acq_date)) %>%\n  mutate(Month_num = month(acq_date)) %>%\n  mutate(Month_fac = month(acq_date, label = TRUE, abbr = FALSE))\n```\n:::\n\n\nPlotting map showing the distribution of fire points\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) + tm_polygons() + tm_shape(fire_sf) + tm_dots()\n```\n\n::: {.cell-output-display}\n![](ice4_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nPlotting map showing the distribution of fire points by month\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) + tm_polygons() + tm_shape(fire_sf) + tm_dots(size = 0.1) + tm_facets(by = \"Month_fac\", free.coords = FALSE, drop.units = TRUE) \n```\n\n::: {.cell-output-display}\n![](ice4_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n##Compute STKDE\n###By Month\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month <- fire_sf %>%\n  select(Month_num)\n```\n:::\n\n\n\nmake ppp object\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_ppp <- as.ppp(fire_month)\nfire_month_ppp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 741 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [521564.1, 695791] x [9658137, 9828767] units\n```\n\n\n:::\n:::\n\n\n\ncheck ppp object\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fire_month_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  741 points\nAverage intensity 2.49258e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   8.000   9.000   8.579  10.000  12.000 \n\nWindow: rectangle = [521564.1, 695791] x [9658137, 9828767] units\n                    (174200 x 170600 units)\nWindow area = 29728200000 square units\n```\n\n\n:::\n:::\n\n\ncheck for duplicated points\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(fire_month_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\ncombine ppp w owin\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_owin <- fire_month_ppp[kbb_owin]\nsummary(fire_month_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  741 points\nAverage intensity 6.424519e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   8.000   9.000   8.579  10.000  12.000 \n\nWindow: polygonal boundary\n2 separate polygons (no holes)\n           vertices        area relative.area\npolygon 1     47493 11533600000      1.00e+00\npolygon 2       256      306427      2.66e-05\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n                     (193500 x 178600 units)\nWindow area = 11533900000 square units\nFraction of frame area: 0.334\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_kde <- spattemp.density(fire_month_owin)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(st_kde)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 0.0304 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [1, 12]\n\nEvaluation\n  128 x 128 x 12 trivariate lattice\n  Density range: [1.233458e-27, 8.202976e-10]\n```\n\n\n:::\n:::\n\n\nplotting STKDE by last 6 months \n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(7,8,9,10,11,12)\npar(mfcol = c(2,3))\nfor(i in tims){\n  plot(st_kde, i,\n       override.par = FALSE,\n       fix.range = TRUE,\n       main = paste(\"KDE at month\", i))\n}\n```\n\n::: {.cell-output-display}\n![](ice4_files/figure-html/unnamed-chunk-17-1.png){width=1152}\n:::\n:::\n\n###By Day\ncreate ppp object\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_ppp <- fire_sf %>%\n  select(DayOfYear) %>%\n  as.ppp()\n```\n:::\n\ncombine ppp and owin\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_owin <- fire_yday_ppp[kbb_owin]\nsummary(fire_yday_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  741 points\nAverage intensity 6.424519e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   10.0   213.0   258.0   245.9   287.0   352.0 \n\nWindow: polygonal boundary\n2 separate polygons (no holes)\n           vertices        area relative.area\npolygon 1     47493 11533600000      1.00e+00\npolygon 2       256      306427      2.66e-05\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n                     (193500 x 178600 units)\nWindow area = 11533900000 square units\nFraction of frame area: 0.334\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_yday <- spattemp.density(fire_yday_owin)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(kde_yday)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 6.3198 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [10, 352]\n\nEvaluation\n  128 x 128 x 343 trivariate lattice\n  Density range: [3.959516e-27, 2.751287e-12]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot(kde_yday)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(animation)\nlibrary(spatstat)\n\ndata(fmd)\nfmd_case <- fmd$cases\nfmd_cont <- fmd$controls\n\n# Estimate bandwidths and create density/risk maps\nhlam <- LIK.spattemp(fmd_case)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nh = 5.86446 \b; lambda = 5.535485 \nh = 6.450906 \b; lambda = 5.535485 \nh = 5.86446 \b; lambda = 6.121931 \nh = 5.278014 \b; lambda = 6.121931 \nh = 4.691568 \b; lambda = 6.415154 \nh = 4.691568 \b; lambda = 7.0016 \nh = 4.105122 \b; lambda = 7.734658 \nh = 2.93223 \b; lambda = 8.027881 \nh = 1.466115 \b; lambda = 8.980855 \nh = 2.345784 \b; lambda = 9.347384 \nh = 2.93223 \b; lambda = 8.614327 \nh = 1.759338 \b; lambda = 8.90755 \nh = 3.518676 \b; lambda = 8.027881 \nh = 2.345784 \b; lambda = 8.614327 \nh = 3.225453 \b; lambda = 8.174492 \nh = 2.639007 \b; lambda = 8.467715 \nh = 3.078841 \b; lambda = 8.247798 \nh = 3.078841 \b; lambda = 8.834244 \nh = 3.042189 \b; lambda = 8.632653 \nh = 2.895577 \b; lambda = 8.999182 \nh = 2.803945 \b; lambda = 9.374874 \nh = 2.785618 \b; lambda = 8.980855 \nh = 2.978046 \b; lambda = 8.719704 \nh = 2.849761 \b; lambda = 8.893805 \nh = 2.945975 \b; lambda = 8.763229 \nh = 2.909322 \b; lambda = 9.148084 \nh = 2.926503 \b; lambda = 8.747766 \nh = 2.976901 \b; lambda = 8.511813 \nh = 2.915908 \b; lambda = 8.87734 \nh = 2.896436 \b; lambda = 8.861877 \nh = 2.908821 \b; lambda = 8.837215 \nh = 2.898226 \b; lambda = 8.966788 \nh = 2.919434 \b; lambda = 8.802521 \nh = 2.912346 \b; lambda = 8.762397 \nh = 2.915018 \b; lambda = 8.848604 \nh = 2.92563 \b; lambda = 8.813911 \nh = 2.934035 \b; lambda = 8.802259 \nh = 2.930047 \b; lambda = 8.767828 \nh = 2.918775 \b; lambda = 8.82841 \nh = 2.924972 \b; lambda = 8.839799 \nh = 2.923587 \b; lambda = 8.83048 \nh = 2.916731 \b; lambda = 8.844979 \nh = 2.923406 \b; lambda = 8.821678 \n```\n\n\n:::\n\n```{.r .cell-code}\nf.breve <- spattemp.density(fmd_case, h=hlam[1], lambda=hlam[2], tlim=c(10, 352))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\ng.tilde <- bivariate.density(fmd_cont, h0=hlam[1])\nrho.breve <- spattemp.risk(f=f.breve, g=g.tilde, tolerate=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating ratio...Done.\nEnsuring finiteness...\n   --joint--\n   --conditional--\nDone.\nCalculating tolerance contours...\n   --convolution 1--\n   --convolution 2--\nDone.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up color map\ncolpal <- spatstat.options(\"image.colfun\")\n\n# Adjust the color map accordingly\nfmdcolours <- colourmap(colpal(320), breaks=c(-80, seq(-7,4,length=320)))\n\n# Time range for KDE plot\nmytimes <- 10:352\n\n# Save the animation as a GIF\nanimation::saveGIF(\n  for (i in 1:length(mytimes)) {\n    # Plot KDE with time selection\n    plot(rho.breve, tselect=mytimes[i], type=\"conditional\", col=fmdcolours,\n         tol.args=list(levels=c(0.05, 0.0001), lty=2:1, drawlabels=FALSE),\n         sleep=0, override.par=FALSE, fix.range=TRUE)\n    title(xlab=\"Easting\", ylab=\"Northing\")\n  },\n  movie.name=\"fmd_updated.gif\", ani.width=640, ani.height=640, interval=1/12\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOutput at: fmd_updated.gif\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n",
    "supporting": [
      "ice4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}